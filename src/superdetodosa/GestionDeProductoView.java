
package superdetodosa;

import java.util.TreeSet;
import javax.swing.JOptionPane;


public class GestionDeProductoView extends javax.swing.JInternalFrame {
private TreeSet<Producto> setProductos = new TreeSet<>();
    /**
     * Creates new form GestionDeProductoView
     */
    public GestionDeProductoView() {
        initComponents();
        cargarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jbNuevo = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jtDescripcion = new javax.swing.JTextField();
        jtCodigo = new javax.swing.JTextField();
        jbBuscarporCodigo = new javax.swing.JButton();
        jtPrecio = new javax.swing.JTextField();
        jtStock = new javax.swing.JTextField();
        jcbRubro = new javax.swing.JComboBox<>();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel1.setText("Gestión de Producto");

        jLabel2.setText("Código");

        jLabel3.setText("Descripción");

        jLabel4.setText("Precio");

        jLabel5.setText("Rubro");

        jLabel6.setText("Stock");

        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbBuscarporCodigo.setText("Buscar");
        jbBuscarporCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarporCodigoActionPerformed(evt);
            }
        });

        jcbRubro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el Rubro" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbRubro, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(53, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbBuscarporCodigo)
                            .addComponent(jLabel1))
                        .addGap(109, 109, 109))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSalir)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscarporCodigo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcbRubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNuevo)
                    .addComponent(jbGuardar)
                    .addComponent(jbEliminar)
                    .addComponent(jbSalir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        // TODO add your handling code here:
        
 limpiarPlanilla();
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        // TODO add your handling code here:
         try{
         if (jtDescripcion.getText().isEmpty()||jtPrecio.getText().isEmpty()||jtStock.getText().isEmpty()){
             JOptionPane.showMessageDialog(this, "Ningun campo debe estar vacio"); 
             return;
         }
        if (jcbRubro.getSelectedItem().toString().equals("Seleccione el Rubro")) {
              JOptionPane.showMessageDialog(this, "Debe seleccionar el Rubro"); 
             return;
         }
    int codigo = Integer.parseInt(jtCodigo.getText());
    String descripcion = jtDescripcion.getText();
    double precio = Double.parseDouble(jtPrecio.getText());
    int stock = Integer.parseInt(jtStock.getText());
    Categoria categoria = Categoria.valueOf(jcbRubro.getSelectedItem().toString());

    Producto nuevoProducto = new Producto(codigo, descripcion, precio, stock, categoria);

    setProductos.add(nuevoProducto);
    JOptionPane.showMessageDialog(this, "Producto Guardado Correctamente");
     limpiarPlanilla();
    }catch (NumberFormatException e){
           JOptionPane.showMessageDialog(this, "DATOS INCORRECTOS");
    }
   
    
    
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        // TODO add your handling code here:

         try {
        int codigo = Integer.parseInt(jtCodigo.getText());

        // Buscar el producto en el TreeSet
        Producto productoAEliminar = buscarProductoPorCodigo(codigo);

        if (productoAEliminar != null) {
            // Eliminar el producto del TreeSet
            setProductos.remove(productoAEliminar);
            JOptionPane.showMessageDialog(this, "Producto Eliminado");
            limpiarPlanilla();

            // Aquí puedes actualizar la interfaz gráfica si es necesario
            // Por ejemplo, limpiar campos de texto, actualizar el ComboBox, etc.
        } else {
            JOptionPane.showMessageDialog(this, "Producto no encontrado");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "NO hay ningun producto selecionado");
    }

    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbBuscarporCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarporCodigoActionPerformed
        // TODO add your handling code here:
          int codigoBuscado = Integer.parseInt(jtCodigo.getText());

    Producto productoEncontrado = buscarProductoPorCodigo(codigoBuscado); // Método para buscar en el TreeSet

    if (productoEncontrado != null) {
        jtCodigo.setText(Integer.toString(productoEncontrado.getCodigo()));
        jtDescripcion.setText(productoEncontrado.getDescripcion());
        jtPrecio.setText(Double.toString(productoEncontrado.getPrecio()));
        jtStock.setText(Integer.toString(productoEncontrado.getStock()));
        jcbRubro.setSelectedItem(productoEncontrado.getRubro());
     
// Aquí se busca el índice del rubro en el combo
        int index = jcbRubro.getItemCount() - 1; // Inicializar con el último índice (no válido)
        for (int i = 0; i < jcbRubro.getItemCount(); i++) {
            if (jcbRubro.getItemAt(i).equals(productoEncontrado.getRubro().toString())) {
                index = i;
                break;
            }
        }
        
        // Se establece el índice encontrado en el combo
        jcbRubro.setSelectedIndex(index);
    } else {
        JOptionPane.showMessageDialog(this, "Producto no encontrado");
    }
    }//GEN-LAST:event_jbBuscarporCodigoActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        
     setVisible(false);   
    }//GEN-LAST:event_jbSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton jbBuscarporCodigo;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<String> jcbRubro;
    private javax.swing.JTextField jtCodigo;
    private javax.swing.JTextField jtDescripcion;
    private javax.swing.JTextField jtPrecio;
    private javax.swing.JTextField jtStock;
    // End of variables declaration//GEN-END:variables

private void cargarCombo(){

Categoria[] categorias = Categoria.values();
    
    for (Categoria categoria : categorias) {
        jcbRubro.addItem(categoria.toString());
    }
}

private Producto buscarProductoPorCodigo(int codigoBuscado) {
    for (Producto producto : setProductos) {
        if (producto.getCodigo() == codigoBuscado) {
            return producto;
        }
    }
    return null; // Si no se encuentra el producto con el código buscado
}

private void limpiarPlanilla(){
   jtCodigo.setText(""); // Limpia los campos
    jtDescripcion.setText("");
    jtPrecio.setText("");
    jtStock.setText("");
    jcbRubro.setSelectedIndex(0);
}

    

}
